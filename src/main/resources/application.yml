server:
  port: 8081

mybatis:
  mapper-locations: classpath*:mapper/*/*Mapper.xml

sharding:
  jdbc:
    datasource:
      names: ds0,ds1
      # 数据源ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/haha?characterEncoding=utf8
        username: root
        password: qwer1234
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3307/haha?characterEncoding=utf8
        username: root
        password: qwer1234
    config:
      sharding:
        props:
          sql.show: true
        tables:
          t_user:
            key-generator-column-name: id
            key-generator-type: SNOWFLAKE
#            actual-data-nodes: ds${0..1}.t_user${0..7}
            actual-data-nodes: ds0.t_user
            databaseStrategy:
              inline:
                sharding-column: id
                algorithm-expression: ds0
            table-strategy:
              inline:
                sharding-column: id
                algorithm-expression: t_user

          t_feed:
            key-generator-column-name: id
            key-generator-type: SNOWFLAKE
            actual-data-nodes: ds0.t_feed
            databaseStrategy:
              inline:
                sharding-column: id
                algorithm-expression: ds0
            table-strategy:
              inline:
                sharding-column: id
                algorithm-expression: t_feed

          t_follower:
            key-generator-column-name: id
            key-generator-type: SNOWFLAKE
#            actual-data-nodes: ds${0..1}.t_user${0..7}
            actual-data-nodes: ds0.t_follower0,ds0.t_follower2,ds0.t_follower4,ds0.t_follower6,ds1.t_follower1,ds1.t_follower3,ds1.t_follower5,ds1.t_follower7
            databaseStrategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds${user_id % 2}
            table-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: t_follower${user_id % 8}

          t_following:
            key-generator-column-name: id
            key-generator-type: SNOWFLAKE
            #            actual-data-nodes: ds${0..1}.t_user${0..7}
            actual-data-nodes: ds0.t_following0,ds0.t_following2,ds0.t_following4,ds0.t_following6,ds1.t_following1,ds1.t_following3,ds1.t_following5,ds1.t_following7
            databaseStrategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds${user_id % 2}
            table-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: t_following${user_id % 8}


          t_user_feed:
            key-generator-column-name: id
            key-generator-type: SNOWFLAKE
            #            actual-data-nodes: ds${0..1}.t_user${0..7}
            actual-data-nodes: ds0.t_user_feed0,ds0.t_user_feed2,ds0.t_user_feed4,ds0.t_user_feed6,ds1.t_user_feed1,ds1.t_user_feed3,ds1.t_user_feed5,ds1.t_user_feed7
            databaseStrategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds${user_id % 2}
            table-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: t_follower${user_id % 8}


#          t_user:
#            key-generator-column-name: id
#            key-generator-type: SNOWFLAKE
##            actual-data-nodes: ds${0..1}.t_user${0..7}
#            actual-data-nodes: ds0.t_user0,ds0.t_user2,ds0.t_user4,ds0.t_user6,ds1.t_user1,ds1.t_user3,ds1.t_user5,ds1.t_user7
#            databaseStrategy:
#              inline:
#                sharding-column: id
#                algorithm-expression: ds${id % 2}
#            table-strategy:
#              inline:
#                sharding-column: id
#                algorithm-expression: t_user${id % 8}