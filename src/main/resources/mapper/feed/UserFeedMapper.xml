<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haha.feed.dao.UserFeedMapper">

    <resultMap id="userFeedMap" type="com.haha.feed.model.UserFeed">
        <id column="id" property="id"  javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="feed_id" property="feedId" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="feed_create_time" property="feedCreateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="delete" property="delete" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="create" parameterType="com.haha.feed.model.UserFeed">
        INSERT INTO t_user_feed(id,user_id,feed_id,feed_create_time)
        VALUES
        (
            #{id},#{userId},#{feedId},#{feedCreateTime}
        )
    </insert>

    <select id="getUserFeedList" parameterType="long" resultMap="userFeedMap">
        select
        id,user_id,feed_id,feed_create_time
        from t_user_feed
        where user_id = #{userId}
        order by feed_create_time desc
        limit #{skip},#{limit}
    </select>


</mapper>
